{"version":3,"sources":["helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["primerMayuscula","texto","charAt","toUpperCase","slice","Campo","styled","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","console","log","setTimeout","cotizacion","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","ContenedorHeader","header","TextoHeader","h1","Header","titulo","Contenedor","ContenedorFormulario","App","resumen","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAgCO,SAASA,EAAgBC,GAC5B,OAAOA,EAAMC,OAAO,GAAGC,cAAgBF,EAAMG,MAAM,G,uCC5BjDC,EAAQC,IAAOC,IAAV,oGAMLC,EAAQF,IAAOG,MAAV,kDAILC,EAASJ,IAAOK,OAAV,sJAQNC,EAAaN,IAAOO,MAAV,iDAIVC,EAAQR,IAAOS,OAAV,2WAiBLC,EAAQV,IAAOC,IAAV,oKAqIIU,EA5HI,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,gBAAqB,EACxBC,mBAAS,CACnCC,MAAO,GACPC,KAAM,GACNC,KAAM,KAJ4C,mBAC/CC,EAD+C,KACxCC,EADwC,OAMvBL,oBAAS,GANc,mBAM9CM,EAN8C,KAMvCC,EANuC,KAS/CN,EAAqBG,EAArBH,MAAOC,EAAcE,EAAdF,KAAMC,EAAQC,EAARD,KAGdK,EAAqB,SAAAC,GACvBJ,EAAa,2BACND,GADK,kBAEPK,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,UA+CnC,OACI,uBACIC,SA7Cc,SAAAJ,GAGlB,GAFAA,EAAEK,iBAEgB,KAAfb,EAAMc,QAA6B,KAAdb,EAAKa,QAA8B,KAAfZ,EAAKY,OAAjD,CAIAR,GAAa,GAGb,IAAIS,EAAY,IAGVC,EDnFP,SAA+Bf,GAClC,OAAO,IAAIgB,MAAOC,cAAgBjB,ECkFXkB,CAAsBlB,GAEzCc,GAA4B,EAAbC,EAAkBD,EAAW,IAM5CA,EDtFD,SAAuBf,GAC1B,IAAIoB,EAEJ,OAAOpB,GACH,IAAK,UACDoB,EAAa,IACb,MACJ,IAAK,YACDA,EAAa,KACb,MACJ,IAAK,WACDA,EAAa,KAKrB,OAAOA,ECsESC,CAAcrB,GAASe,EAInC,IAAMO,EDtEP,SAAqBpB,GACxB,MAAiB,WAATA,EAAqB,IAAO,ICqETqB,CAAYrB,GACnCa,EAAYS,WAAWF,EAAiBP,GAAWU,QAAQ,GAC3DC,QAAQC,IAAIZ,GAEZjB,GAAgB,GAEhB8B,YAAW,WAEP9B,GAAgB,GAChBD,EAAe,CACXgC,WAAYd,EACZZ,YAEL,UAlCCG,GAAa,IAwCjB,UAGMD,EAAQ,cAACV,EAAD,gDAAkD,KAC5D,eAACX,EAAD,WACI,cAACG,EAAD,oBACA,eAACE,EAAD,CACIqB,KAAK,QACLC,MAAOX,EACP8B,SAAUvB,EAHd,UAKI,wBAAQI,MAAM,GAAd,8BACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,4BAGR,eAAC3B,EAAD,WACI,cAACG,EAAD,qBACA,eAACE,EAAD,CACIqB,KAAK,OACLC,MAAOV,EACP6B,SAAUvB,EAHd,UAKI,wBAAQI,MAAM,GAAd,8BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,wBAGR,eAAC3B,EAAD,WACI,cAACG,EAAD,mBACA,cAACI,EAAD,CACIwC,KAAK,QACLrB,KAAK,OACLC,MAAM,SACNqB,QAAoB,WAAT9B,EACX4B,SAAUvB,IAPlB,UAUI,cAAChB,EAAD,CACIwC,KAAK,QACLrB,KAAK,OACLC,MAAM,WACNqB,QAAoB,aAAT9B,EACX4B,SAAUvB,IAflB,eAkBA,cAACd,EAAD,CAAOsC,KAAK,SAAZ,yBCvKNE,EAAoBhD,IAAOC,IAAV,kJA4BRgD,EApBC,SAAC,GAAa,IAAZ/B,EAAW,EAAXA,MAGPH,EAAqBG,EAArBH,MAAOC,EAAcE,EAAdF,KAAMC,EAAQC,EAARD,KAEpB,MAAY,KAATF,GAAuB,KAARC,GAAsB,KAARC,EACrB,KAGP,eAAC+B,EAAD,WACI,uDACA,+BACI,yCAAYtD,EAAgBqB,MAC5B,mDAAmBC,KACnB,wCAAWtB,EAAgBuB,a,gBCtBrCiC,EAAUlD,IAAOmD,EAAV,2IAOPC,EAAsBpD,IAAOC,IAAV,qMASnBoD,EAAkBrD,IAAOmD,EAAV,6IA+BNG,EAvBG,SAAC,GAAkB,IAAjBV,EAAgB,EAAhBA,WAGhB,OACoB,IAAfA,EAAoB,cAACM,EAAD,mDAErB,cAACE,EAAD,UACI,cAACG,EAAA,EAAD,CACIC,UAAU,IACVC,UAAU,YAFd,SAII,cAACC,EAAA,EAAD,CACIC,WAAW,YAEXC,QAAS,CAACC,MAAO,IAAKC,KAAM,KAHhC,SAKI,eAACT,EAAD,6BAAiCT,MAH5BA,QClBVmB,G,MApBC,WACZ,OACI,sBAAKN,UAAU,YAAf,UACI,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,8BCdrBO,EAAmBhE,IAAOiE,OAAV,6HAOhBC,EAAclE,IAAOmE,GAAV,kIAeFC,EARA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,OACI,cAACL,EAAD,UACI,cAACE,EAAD,UAAcG,OCZpBC,EAAatE,IAAOC,IAAV,oEAKVsE,EAAuBvE,IAAOC,IAAV,yEAoCXuE,MA/Bf,WAAgB,IAAD,EACqB1D,mBAAS,CACzC8B,WAAY,EACZ1B,MAAO,CACLH,MAAO,GACPC,KAAM,GACNC,KAAM,MANG,mBACNwD,EADM,KACG7D,EADH,OAUuBE,oBAAS,GAVhC,mBAUN4D,EAVM,KAUI7D,EAVJ,KAYL+B,EAAsB6B,EAAtB7B,WAAY1B,EAAUuD,EAAVvD,MACpB,OACE,eAACoD,EAAD,WACE,cAAC,EAAD,CAAQD,OAAO,yBACf,eAACE,EAAD,WACE,cAAC,EAAD,CACE3D,eAAgBA,EAChBC,gBAAiBA,IAGlB6D,EAAW,cAAC,EAAD,IACZ,eAAC,WAAD,WACA,cAAC,EAAD,CAASxD,MAAOA,IAChB,cAAC,EAAD,CAAW0B,WAAYA,IAFvB,cC7BO+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c9446b35.chunk.js","sourcesContent":["// obtiene la diferencia de a単os\r\n\r\nexport function obtenerDiferenciaYear(year){\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n// calcula el total a pagar seun la marca\r\nexport function calcularMarca(marca){\r\n    let incremento;\r\n\r\n    switch(marca){\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return incremento;\r\n}\r\n\r\n// Calcula el tipo de seguro\r\nexport function obtenerPlan(plan){\r\n    return (plan === 'basico') ? 1.20 : 1.50;\r\n}\r\n\r\n// Primera letra mayuscula\r\nexport function primerMayuscula(texto){\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import styled from '@emotion/styled';\r\nimport React, { useState } from 'react';\r\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helper';\r\n\r\n\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    display:block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    --webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 2rem;\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: #26c6da;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\nconst Formulario = ({guardarResumen, guardarCargando}) => {\r\n    const [datos, guardarDatos] = useState({\r\n        marca: '',\r\n        year: '',\r\n        plan: ''\r\n    });\r\n    const [ error, guardarError] = useState(false);\r\n\r\n    //extraer los valores del state\r\n    const {marca, year, plan} = datos;\r\n\r\n    // leer los datos del formulario y colocarlos en el state\r\n    const obtenerInformacion = e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const cotizarSeguro = e => {\r\n        e.preventDefault();\r\n\r\n        if(marca.trim()==='' || year.trim()==='' || plan.trim() ===''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        // una base de 20000\r\n        let resultado = 20000;\r\n\r\n        // obtener la diferencia de a単os\r\n        const diferencia = obtenerDiferenciaYear(year);\r\n        // por cada a単o hay que restar el 3%\r\n        resultado -= ((diferencia * 3 )* resultado)/100;\r\n       \r\n\r\n        // Americano 15%\r\n        //asiatico 5%\r\n        // Europeo 30%\r\n        resultado = calcularMarca(marca) * resultado;\r\n        \r\n        // Basico aumenta 20%\r\n        // Completo 50%\r\n        const incrementoPlan = obtenerPlan(plan);\r\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\r\n        console.log(resultado);\r\n\r\n        guardarCargando(true);\r\n\r\n        setTimeout(() => {\r\n\r\n            guardarCargando(false);\r\n            guardarResumen({\r\n                cotizacion: resultado,\r\n                datos\r\n            })\r\n        }, 3000)\r\n        \r\n        \r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={cotizarSeguro}\r\n        >\r\n            { error ? <Error>Todos los campos son obligatorios</Error>: null }\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name=\"marca\"\r\n                    value={marca}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"americano\">Americano</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                    <option value=\"asiatico\">Asiatico</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>A単o</Label>\r\n                <Select\r\n                    name=\"year\"\r\n                    value={year}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio \r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"basico\"\r\n                    checked = {plan === 'basico'}\r\n                    onChange={obtenerInformacion}\r\n                /> Basico\r\n\r\n                <InputRadio \r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"completo\"\r\n                    checked = {plan === 'completo'}\r\n                    onChange={obtenerInformacion}\r\n                /> Completo\r\n            </Campo>\r\n            <Boton type=\"submit\">Cotizar</Boton>\r\n\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React, { Fragment } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { primerMayuscula} from '../helper';\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838f;\r\n    color: #fff;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst Resumen = ({datos}) => {\r\n\r\n    // extraer datos\r\n    const {marca, year, plan} = datos;\r\n\r\n    if(marca ==='' || year ==='' || plan ===''){\r\n        return null;\r\n    }\r\n    return ( \r\n        <ContenedorResumen>\r\n            <h2>Resumen de Cotizacion</h2>\r\n            <ul>\r\n                <li>Marca: {primerMayuscula(marca)}</li>\r\n                <li>A単o del auto: {year}</li>\r\n                <li>Plan: {primerMayuscula(plan)}</li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n     );\r\n}\r\n \r\nexport default Resumen;","import styled from '@emotion/styled';\r\nimport React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: .5rem;\r\n    border: 1px solid #26c6da;\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838f;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`;\r\n\r\nconst Resultado = ({cotizacion}) => {\r\n\r\n    \r\n    return ( \r\n        (cotizacion === 0) ? <Mensaje>Elige marca, a単o y tipo de seguro</Mensaje> \r\n        : (\r\n        <ResultadoCotizacion>\r\n            <TransitionGroup\r\n                component=\"p\"\r\n                className=\"resultado\"\r\n            >\r\n                <CSSTransition\r\n                    classNames=\"resultado\"\r\n                    key={cotizacion}\r\n                    timeout={{enter: 500, exit: 500}}\r\n                >\r\n                    <TextoCotizacion>El total es: $ {cotizacion}</TextoCotizacion>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </ResultadoCotizacion>\r\n    ));\r\n}\r\n \r\nexport default Resultado;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n            </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin:0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align : center;\r\n`;\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n     );\r\n}\r\n \r\nexport default Header;","import styled from \"@emotion/styled\";\nimport React, { Fragment, useState } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport Spinner from \"./components/Spinner\";\nimport Header from \"./components/Header\";\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: \"\",\n      year: \"\",\n      plan: \"\",\n    },\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n  // extraer datos\n  const { cotizacion, datos } = resumen;\n  return (\n    <Contenedor>\n      <Header titulo=\"Cotizador de seguros\" />\n      <ContenedorFormulario>\n        <Formulario\n          guardarResumen={guardarResumen}\n          guardarCargando={guardarCargando}\n        />\n\n        {cargando ? <Spinner /> : ( \n        <Fragment>\n        <Resumen datos={datos} /> \n        <Resultado cotizacion={cotizacion} /> </Fragment>)}\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}